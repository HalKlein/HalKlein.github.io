<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring全家桶 on HalKlein`s Blog</title>
    <link>https://halklein.github.io/tags/spring%E5%85%A8%E5%AE%B6%E6%A1%B6/</link>
    <description>Recent content in Spring全家桶 on HalKlein`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>dev.HalKlein@gmail.com (HalKlein)</managingEditor>
    <webMaster>dev.HalKlein@gmail.com (HalKlein)</webMaster>
    <lastBuildDate>Fri, 07 Feb 2020 16:56:03 +0800</lastBuildDate>
    
	<atom:link href="https://halklein.github.io/tags/spring%E5%85%A8%E5%AE%B6%E6%A1%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring整合Elasticsearch</title>
      <link>https://halklein.github.io/2020/037/</link>
      <pubDate>Fri, 07 Feb 2020 16:56:03 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/037/</guid>
      <description>引入依赖 spring-boot-starter-data-elasticsearch https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-elasticsearch &amp;lt;!-- Spring整合Elasticsearch --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-data-elasticsearch&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 配置Elasticsearch cluster-name、cluster-n</description>
    </item>
    
    <item>
      <title>Spring 整合 Kafka</title>
      <link>https://halklein.github.io/2020/035/</link>
      <pubDate>Sun, 02 Feb 2020 09:41:30 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/035/</guid>
      <description>引入依赖 https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka 为更好的兼容性，使用父pom中声明的版本即可，不要单独声明版本 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.kafka&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-kafka&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 配置Kafka # 配置 Kafka # 服务器地址及端口 spring.kafka.bootstrap-servers=localhost:9092 # 消费者分组ID，</description>
    </item>
    
    <item>
      <title>Spring 整合 Redis</title>
      <link>https://halklein.github.io/2020/032/</link>
      <pubDate>Fri, 31 Jan 2020 11:54:23 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/032/</guid>
      <description>引入依赖 spring-boot-starter-data-redis &amp;lt;!-- SpringBoot整合Redis，这里可以不要写version，因为在spring-boot-starter-parent中默</description>
    </item>
    
    <item>
      <title>使用Spring AOP统一记录日志</title>
      <link>https://halklein.github.io/2020/030/</link>
      <pubDate>Thu, 30 Jan 2020 12:26:21 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/030/</guid>
      <description>需求 如果我们每次都在业务组件中记录日志，但是记录日志并不是业务需求，它属于系统需求。 AOP的概念 Aspect Oriented Programing ​ 即面向方面（切面）编程。 ​ AOP是一</description>
    </item>
    
    <item>
      <title>Spring统一处理异常</title>
      <link>https://halklein.github.io/2020/029/</link>
      <pubDate>Thu, 30 Jan 2020 11:57:56 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/029/</guid>
      <description>在系统出现错误时，我们希望系统给用户图形化的反馈，而不是一些状态错误信息。 各个层次都会出现错误，但其实最终都会抛出异常给表现层。所以我们只用</description>
    </item>
    
    <item>
      <title>Spring事务管理</title>
      <link>https://halklein.github.io/2020/028/</link>
      <pubDate>Tue, 28 Jan 2020 18:59:06 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/028/</guid>
      <description>什么是事务 事务是由N步数据库操作序列组成的逻辑执行单元，这系列操作要么全执行，要么全放弃执行。 事务的特性（ACID） 原子性（Atomicit</description>
    </item>
    
    <item>
      <title>IDEA引入依赖失败的解决办法</title>
      <link>https://halklein.github.io/2020/027/</link>
      <pubDate>Mon, 27 Jan 2020 19:11:39 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/027/</guid>
      <description>问题 今天学习异步消息，用到 FastJson 对 json 进行解析和生成，但是在 pom.xml 中引入下面的依赖描述时，等待许久也无法下载完成。之后尝试进行科学上网，并开启全局代理</description>
    </item>
    
    <item>
      <title>用前缀树过滤敏感词</title>
      <link>https://halklein.github.io/2020/026/</link>
      <pubDate>Mon, 27 Jan 2020 12:09:44 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/026/</guid>
      <description>前缀树 ​ 名称：Trie、字典树、查找树 ​ 特点：查找效率高，消耗内存大 ​ 应用：字符串检索、词频统计、字符串排序等 敏感词过滤器 ​ 定义前缀树根据敏</description>
    </item>
    
    <item>
      <title>常用的元注解</title>
      <link>https://halklein.github.io/2020/025/</link>
      <pubDate>Mon, 20 Jan 2020 20:35:11 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2020/025/</guid>
      <description>常用的元注解 当我们需要自定义注解时，要用到元注解定义我们自己的注解（所谓元注解，就是注解其它注解的注解），其中常见的元注解有以下四个： @Target 由于</description>
    </item>
    
    <item>
      <title>Web项目的一些调试技巧</title>
      <link>https://halklein.github.io/2019/023/</link>
      <pubDate>Sat, 28 Dec 2019 20:14:16 +0800</pubDate>
      <author>dev.HalKlein@gmail.com (HalKlein)</author>
      <guid>https://halklein.github.io/2019/023/</guid>
      <description>1. 响应状态码的含义 200 OK，表明请求已经成功. 默认情况下状态码为200的响应可以被缓存。 302 Found，重定向，服务器发送 302 状态码和一个新的 url 让</description>
    </item>
    
  </channel>
</rss>